name: üîó GHA
on: [push, pull_request]

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-runner
  cancel-in-progress: true

jobs:
  # First stage: Only static checks, fast and prevent expensive builds from running.

  static-checks:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üìä Static checks
    uses: ./.github/workflows/static_checks.yml

  # Second stage: Run all the builds and some of the tests.

  android-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: ü§ñ Android
    needs: static-checks
    uses: ./.github/workflows/android_builds.yml

  ios-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üçè iOS
    needs: static-checks
    uses: ./.github/workflows/ios_builds.yml

  linux-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üêß Linux
    needs: static-checks
    uses: ./.github/workflows/linux_builds.yml

  macos-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üçé macOS
    needs: static-checks
    uses: ./.github/workflows/macos_builds.yml

  windows-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üèÅ Windows
    needs: static-checks
    uses: ./.github/workflows/windows_builds.yml

  web-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üåê Web
    needs: static-checks
    uses: ./.github/workflows/web_builds.yml

  # Third stage: Run auxiliary tests using build artifacts from previous jobs.

  # Can be turned off for PRs that intentionally break compat with godot-cpp,
  # until both the upstream PR and the matching godot-cpp changes are merged.
  godot-cpp-test:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: ü™≤ Godot CPP
    # This can be changed to depend on another platform, if we decide to use it for
    # godot-cpp instead. Make sure to move the .github/actions/godot-api-dump step
    # appropriately.
    needs: linux-build
    uses: ./.github/workflows/godot_cpp_test.yml

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [linux-build, macos-build, windows-build]
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      # FIXME: remove
      - name: list files
        run: |
          ls linux-editor-mono
          ls macos-editor

      - name: Prepare release files
        run: |
          zip -r GodotSharp.zip linux-editor-mono/GodotSharp

      - name: Upload release files
        uses: softprops/action-gh-release@v2.0.8
        with:
          fail_on_unmatched_files: true
          files: |
            GodotSharp.zip
            linux-editor-mono/godot.linuxbsd.editor.x86_64.mono
            linux-template-minimal/godot.linuxbsd.template_release.x86_64
            linux-template-debug-mono/godot.linuxbsd.template_debug.x86_64.mono
            linux-template-mono/godot.linuxbsd.template_release.x86_64.mono
            macos-editor/godot.macos.editor.universal
            macos-template/godot.macos.template_release.universal
            macos-template-debug/godot.macos.template_debug.universal
            windows-editor/godot.windows.editor.x86_64.exe
            windows-template/godot.windows.template_release.x86_64.exe
            windows-template/godot.windows.template_release.x86_64.console.exe
            windows-template-debug/godot.windows.template_debug.x86_64.exe
            windows-template-debug/godot.windows.template_debug.x86_64.console.exe
